module naming/names

imports // constructors

  signatures/Data-sig
  signatures/Execute-sig
  signatures/Expressions-sig
  signatures/Model-sig
  signatures/Modules-sig
  signatures/Types-sig
  api/constructors
  desugaring/constructors
  naming/_notNaBL
  
// imports // use custom runtime libraries
// 
//   lib/nabl/-
//   lib/task/-
//   lib/properties/-
//   lib/types/-
//   lib/icedust/-
//   lib/editor/-
  
namespaces
  
  Module
  Entity
  Entity2                            //Nasty Hack to enforce no duplicate entity types
  EntityInstance
  Attribute
  Relation
  Role
  Inverse
  Shortcut
  This
  ModuleThis
  MemberType
  MemberValue
  Var

properties

  derivation-type      of Attribute   : DerivationType  //Derivation(), DefaultValue() or Normal()
  multiplicity         of Attribute   : Multiplicity
  multiplicity-inverse of Role        : Multiplicity
  inverse              of Role        : Inverse
  origin-role          of Inverse     : Role
  origin-role2         of Shortcut    : Role
  rel-ty               of Shortcut    : Entity
  side                 of Relation    : Term
  member-origin        of MemberValue : Term
  strategy             of Module      : Strategy
  
binding rules // modules

  ModuleDesugared(m, Some(s), _) : 
    defines Module m
      of strategy s
    scopes Entity
    scopes Entity2
    scopes EntityInstance
    scopes ModuleThis
    implicitly defines ModuleThis This()
      of strategy s

binding rules // model

  Entity(e-ty, None(), _) :
    defines Entity2 e-ty             //Nasty Hack to enforce no duplicate entity types
    defines non-unique Entity e-ty
      of strategy this-s
      where This() resolves to ModuleThis this2
      and this2 has strategy this-s
    scopes Attribute
    scopes Role
    scopes This
    scopes Var
    implicitly defines This This()
      of type e-ty
      of strategy this-s

  Entity(e-ty, Some(s), _) :
    defines Entity2 e-ty             //Nasty Hack to enforce no duplicate entity types
    defines non-unique Entity e-ty
      of strategy s
    scopes Attribute
    scopes Role
    scopes This
    scopes Var
    implicitly defines This This()
      of type e-ty
      of strategy s
      
  FirstClassRelation(e-ty, None(), _) :
    defines Entity2 e-ty             //Nasty Hack to enforce no duplicate entity types
    defines non-unique Entity e-ty
      of strategy this-s
      where This() resolves to ModuleThis this2
      and this2 has strategy this-s
    scopes Attribute
    scopes Role
    scopes This
    implicitly defines This This()
      of type e-ty
      of strategy this-s
      
  FirstClassRelation(e-ty, Some(s), _) :
    defines Entity2 e-ty             //Nasty Hack to enforce no duplicate entity types
    defines non-unique Entity e-ty
      of strategy s
    scopes Attribute
    scopes Role
    scopes This
    implicitly defines This This()
      of type e-ty
      of strategy s

  Attribute(a, a-ty, a-mu) :
    defines Attribute a
      of type a-ty
      of multiplicity a-mu
      of derivation-type Normal()
      of strategy Incremental() // bottom of lattice
      
  DerivationAttribute(a, a-ty, a-mu, _, None()) :
    defines Attribute a
      of type a-ty
      of multiplicity a-mu
      of derivation-type Derivation()
      of strategy this-s
      where This() resolves to This this2
      and this2 has strategy this-s
      
  DerivationAttribute(a, a-ty, a-mu, _, Some(s)) :
    defines Attribute a
      of type a-ty
      of multiplicity a-mu
      of derivation-type Derivation()
      of strategy s
          
  DefaultAttribute(a, a-ty, a-mu, _, None()) :
    defines Attribute a
      of type a-ty
      of multiplicity a-mu
      of derivation-type DefaultValue()
      of strategy this-s
      where This() resolves to This this2
      and this2 has strategy this-s
          
  DefaultAttribute(a, a-ty, a-mu, _, Some(s)) :
    defines Attribute a
      of type a-ty
      of multiplicity a-mu
      of derivation-type DefaultValue()
      of strategy s

  Role(NaBLHelp(role-ty, role-ty2), inverseName, role-mu, role) :
    refers to Entity2 role-ty //triggers unresolved reference errors, but provides no resolving
    defines Role role
      of type role-ty2
      of multiplicity One()
      of multiplicity-inverse role-mu
      of inverse inverseName
      of rel-ty this-ty2
      of strategy Incremental() // bottom of lattice
      where This() resolves to This this2
      and this2 has type this-ty2
    defines non-unique Entity role-ty2
      scopes Inverse
    defines Inverse inverseName
      of multiplicity role-mu
      of multiplicity-inverse One()
      of type this-ty
      of origin-role role
      of strategy Incremental() // bottom of lattice
      where This() resolves to This this
      and this has type this-ty

  Shortcut(NaBLHelp(RoleRef(role1), type1), shortcut1, NaBLHelp(RoleRef(role2), type2), shortcut2):
    defines non-unique Entity type1
      scopes Shortcut
    defines Shortcut shortcut1
      of type type2
      of multiplicity mu1
      of origin-role role1
      of origin-role2 role2
      of rel-ty rel-ty1
      of strategy Incremental() // bottom of lattice
      where role1 resolves to Role role1def
      and role1def has multiplicity-inverse mu1
      and role1def has rel-ty rel-ty1
    defines non-unique Entity type2
      scopes Shortcut
    defines Shortcut shortcut2
      of type type1
      of multiplicity mu2
      of origin-role role2
      of origin-role2 role1
      of rel-ty rel-ty2
      of strategy Incremental() // bottom of lattice
      where role2 resolves to Role role2def
      and role2def has multiplicity-inverse mu2
      and role2def has rel-ty rel-ty2

  Relation(NaBLHelp(left-ty1, left-ty2), left-name, left-mu, right-mu, NaBLHelp(right-ty1, right-ty2), right-name):
    defines non-unique Entity left-ty2
      scopes Relation
    defines Relation left-name
      of multiplicity left-mu
      of multiplicity-inverse right-mu
      of type right-ty2
      of inverse right-name
      of side Left()
      of derivation-type Normal()
      of strategy Incremental() // bottom of lattice
    defines non-unique Entity right-ty2
      scopes Relation
    defines Relation right-name
      of multiplicity right-mu
      of multiplicity-inverse left-mu
      of type left-ty2
      of inverse left-name
      of side Right()
      of derivation-type Normal()
      of strategy Incremental() // bottom of lattice

  RelationDerived(NaBLHelp(left-ty1, left-ty2), left-name, left-mu, expr, right-mu, NaBLHelp(right-ty1, right-ty2), right-name, None()):
    defines non-unique Entity right-ty2
      scopes Relation
    defines Relation right-name
      of multiplicity right-mu
      of multiplicity-inverse left-mu
      of type left-ty2
      of inverse left-name
      of side Right()
      of derivation-type Derivation()
      of strategy this-s
      where This() resolves to ModuleThis this2
      and this2 has strategy this-s
    defines non-unique Entity left-ty2
      scopes Var
      scopes Relation
      scopes This
      implicitly defines This This()
        of type left-ty2
    defines Relation left-name
      of multiplicity left-mu
      of multiplicity-inverse right-mu
      of type right-ty2
      of inverse right-name
      of side Left()
      of derivation-type Derivation() 
      of strategy this-s

  RelationDerived(NaBLHelp(left-ty1, left-ty2), left-name, left-mu, expr, right-mu, NaBLHelp(right-ty1, right-ty2), right-name, Some(strategy)):
    defines non-unique Entity right-ty2
      scopes Relation
    defines Relation right-name
      of multiplicity right-mu
      of multiplicity-inverse left-mu
      of type left-ty2
      of inverse left-name
      of side Right()
      of derivation-type Derivation()
      of strategy strategy
    defines non-unique Entity left-ty2
      scopes Var
      scopes Relation
      scopes This
      implicitly defines This This()
        of type left-ty2
    defines Relation left-name
      of multiplicity left-mu
      of multiplicity-inverse right-mu
      of type right-ty2
      of inverse right-name
      of side Left()
      of derivation-type Derivation()
      of strategy strategy

binding rules // data

  EntityInstance(e, EntityRef(e-ty), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()
      
  EntityInstance(e, None(), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
      where MemberType() resolves to MemberType membertype
      and membertype has type e-ty
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()

  RelationInstance(e, EntityRef(e-ty), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()
      
  RelationInstance(e, None(), _) :
    defines EntityInstance e
      of type e-ty
      of multiplicity One()
      where MemberType() resolves to MemberType membertype
      and membertype has rel-ty e-ty
    scopes MemberValue
    scopes This
    implicitly defines This This()
      of type e-ty
      of multiplicity One()

  MemberValue(NaBLHelp(m@MemberRef(m-name), m2), value) :
    defines MemberValue m2
      of member-origin m-name
    scopes MemberType
    implicitly defines MemberType MemberType()
      of type m-ty
      of rel-ty r-ty
    where m has type m-ty
    and m has rel-ty r-ty

binding rules // references

  Ref(x) :
    refers to Var x
  otherwise
    refers to Attribute x  in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Relation x in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Role x in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Inverse x in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Shortcut x in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to EntityInstance x

  MemberAccess(exp, a) :
    refers to Attribute a in Entity e-ty
    where exp has type e-ty
  otherwise
    refers to Relation a in Entity e-ty
    where exp has type e-ty
  otherwise
    refers to Role a in Entity e-ty
    where exp has type e-ty
  otherwise
    refers to Inverse a in Entity e-ty
    where exp has type e-ty
  otherwise
    refers to Shortcut a in Entity e-ty
    where exp has type e-ty

  EntityRef(e) :
    refers to Entity e
  
  AttributeRef(a):
    refers to Attribute a in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  
  RoleRef(r):
    refers to Role r in Entity e-ty
    where This() resolves to This this
    and this has type e-ty

  MemberRef(m):
    refers to Attribute m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Relation m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Shortcut m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Role m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty
  otherwise
    refers to Inverse m in Entity e-ty
    where This() resolves to This this
    and this has type e-ty

  EntityInstanceRef(e) :
    refers to EntityInstance e
  
  This() :
    refers to This This()

binding rules // expressions

  Filter(expr1, var, expr2):
    scopes Var
    defines Var var
      of type ty1
      of multiplicity One()
      of strategy st1
    where expr1 has type ty1
      and expr1 has strategy st1

  Find(expr1, var, expr2):
    scopes Var
    defines Var var
      of type ty1
      of multiplicity One()
      of strategy st1
    where expr1 has type ty1
      and expr1 has strategy st1
