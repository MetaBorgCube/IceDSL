module Model

imports
  Common
  Expressions
  Types

context-free syntax // entities

  Model.Entity = <
    entity <ID><Strategy?> {
      <{Member "\n"}*>
    }
  >
  Model.FirstClassRelation = <
    relation <ID><Strategy?> {
      <{Member "\n"}*>
    }
  >
  EntityOrRelation.EntityType = <entity>
  EntityOrRelation.RelationType = <relation>

context-free syntax // shortcut relations

  Model.ShortcutRelation = [
    relation [EntityRef][DotID?][SpaceMultiplicity?] <->[SpaceMultiplicity?] [EntityRef][DotID?][Strategy?] {
      [{Attribute "\n"}*]
    }
  ]

context-free syntax // non-first-class relation

  Model.Relation = [
    relation [EntityRef][DotID?][SpaceMultiplicity?] <->[SpaceMultiplicity?] [EntityRef][DotID?]
  ]

  Model.RelationDerived = [
    relation [EntityRef][DotID?][SpaceMultiplicity?] = [Exp]
      <->[SpaceMultiplicity?] [EntityRef][DotID?][Strategy?]
  ]
  
  SpaceMultiplicity             = [ [MultiplicityOrdering]]

context-free syntax // entity members

  Member                        = <<Attribute>>
  Member                        = <<Role>>
  Member                        = <<Shortcut>>

  Attribute.Attribute           = <
    <ID> : <PrimitiveType><Multiplicity?>
  >
  Attribute.DerivationAttribute = <
    <ID> : <PrimitiveType><Multiplicity?> = <Exp><Strategy?>
  >
  Attribute.DefaultAttribute    = <
    <ID> : <PrimitiveType><Multiplicity?> = <Exp> (default)<Strategy?>
  >
  DerivationType.DefaultValue   = <(default)>
  DerivationType.Derivation     = <>

  Role.Role                     = <<ID><DotID?><SpaceMultiplicity?><SpaceArrowID?>>
  DotID                         = <.<ID>>
  SpaceArrowID                  = [ -> [ID]]

  Shortcut.Shortcut             = <<RoleRef>.<ID> \<-\> <RoleRef>.<ID>>

context-free syntax // specific references
  
  EntityRef.EntityRef           = ID
  AttributeRef.AttributeRef     = ID
  RoleRef.RoleRef               = ID
  MemberRef.MemberRef           = ID // attr or shortcut
