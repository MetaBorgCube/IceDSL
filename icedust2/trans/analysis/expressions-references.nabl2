module expressions-references

rules

  [[ This() ^ (s) : TTuple(this_type, TOne(), TOrdered()) ]] :=
    Implicit{"this"} -> s,
    Implicit{"this"} |-> this_def,
    this_def : this_type.

  [[ Ref(r) ^ (s) : r_def_ty ]] :=
    Member{r} -> s,
    Member{r} |-> r_def,
    r_def : r_def_ty.
      
  [[ MemberAccess(expr, r) ^ (s) : TTuple(r_def_type, out_mult__, out_ord__) ]] :=
    [[expr ^ (s) : TTuple(expr_type, expr_mult, expr_ord) ]],
    expr_type == TEntity(expr_type_entity),
    expr_type_entity ?=I=> entity_scope,
    new_scope -I-> entity_scope,
    Member{r} -> new_scope,
    Member{r} |-> r_def,
    r_def : r_def_ty,
    r_def_ty == TTuple(r_def_type, r_def_mult, r_def_ord),
    (out_mult__, out_ord__) is mulOrd.lub of ((expr_mult,expr_ord),(r_def_mult,r_def_ord)),
    new new_scope.
